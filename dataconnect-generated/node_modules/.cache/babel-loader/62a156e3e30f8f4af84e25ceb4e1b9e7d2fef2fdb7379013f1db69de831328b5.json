{"ast":null,"code":"var _jsxFileName = \"/Users/mdkaifmolla/Desktop/netflix/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\"; // Make sure axios is correctly imported\nimport \"./Row.css\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow = false\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const handleOpenModal = async movie => {\n    const movieDetails = await axios.get(`/movie/${movie.id}?api_key=YOUR_API_KEY&language=en-US`);\n    setSelectedMovie(movieDetails.data);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedMovie(null);\n  };\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleOpenModal(movie),\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `https://image.tmdb.org/t/p/original/${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: handleCloseModal,\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedMovie.title || selectedMovie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedMovie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), \" \", selectedMovie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cast:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"o9+oKjLjFQOt9UAHB8XI95hcXf4=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","Row","title","fetchUrl","isLargeRow","_s","movies","setMovies","selectedMovie","setSelectedMovie","isModalOpen","setIsModalOpen","fetchData","request","get","data","results","handleOpenModal","movie","movieDetails","id","handleCloseModal","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","poster_path","backdrop_path","alt","name","isOpen","onRequestClose","content","overview","release_date","_c","$RefreshReg$"],"sources":["/Users/mdkaifmolla/Desktop/netflix/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\"; // Make sure axios is correctly imported\nimport \"./Row.css\";\nimport Modal from \"./Modal\";\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleOpenModal = async (movie) => {\n    const movieDetails = await axios.get(\n      `/movie/${movie.id}?api_key=YOUR_API_KEY&language=en-US`\n    );\n    setSelectedMovie(movieDetails.data);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedMovie(null);\n  };\n\n  console.log(movies);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleOpenModal(movie)}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`https://image.tmdb.org/t/p/original/${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      {selectedMovie && (\n        <Modal\n          isOpen={isModalOpen}\n          onRequestClose={handleCloseModal}\n          content={\n            <div className=\"modal-content\">\n              <h2>{selectedMovie.title || selectedMovie.name}</h2>\n              <p>{selectedMovie.overview}</p>\n              <p>\n                <strong>Release Date:</strong> {selectedMovie.release_date}\n              </p>\n              <p>\n                <strong>Cast:</strong> {/* Add cast details here */}\n              </p>\n              {/* Add more details as needed */}\n            </div>\n          }\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Row;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,UAAU,GAAG;AAAM,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,eAAegB,SAASA,CAAA,EAAG;MACzB,MAAMC,OAAO,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAACX,QAAQ,CAAC;MACzCI,SAAS,CAACM,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAChB;IACAD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMc,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvC,MAAMC,YAAY,GAAG,MAAMtB,KAAK,CAACiB,GAAG,CAClC,UAAUI,KAAK,CAACE,EAAE,sCACpB,CAAC;IACDX,gBAAgB,CAACU,YAAY,CAACJ,IAAI,CAAC;IACnCJ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7BV,cAAc,CAAC,KAAK,CAAC;IACrBF,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAEDa,OAAO,CAACC,GAAG,CAACjB,MAAM,CAAC;EAEnB,oBACEN,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAAyB,QAAA,EAAKvB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEhB7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BnB,MAAM,CAACwB,GAAG,CAAEZ,KAAK,iBAChBlB,OAAA;QAEE+B,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACC,KAAK,CAAE;QACtCM,SAAS,EAAE,eAAepB,UAAU,IAAI,kBAAkB,EAAG;QAC7D4B,GAAG,EAAE,uCACH5B,UAAU,GAAGc,KAAK,CAACe,WAAW,GAAGf,KAAK,CAACgB,aAAa,EACnD;QACHC,GAAG,EAAEjB,KAAK,CAACkB;MAAK,GANXlB,KAAK,CAACE,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLrB,aAAa,iBACZR,OAAA,CAACF,KAAK;MACJuC,MAAM,EAAE3B,WAAY;MACpB4B,cAAc,EAAEjB,gBAAiB;MACjCkB,OAAO,eACLvC,OAAA;QAAKwB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BzB,OAAA;UAAAyB,QAAA,EAAKjB,aAAa,CAACN,KAAK,IAAIM,aAAa,CAAC4B;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpD7B,OAAA;UAAAyB,QAAA,EAAIjB,aAAa,CAACgC;QAAQ;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/B7B,OAAA;UAAAyB,QAAA,gBACEzB,OAAA;YAAAyB,QAAA,EAAQ;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACrB,aAAa,CAACiC,YAAY;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC,eACJ7B,OAAA;UAAAyB,QAAA,gBACEzB,OAAA;YAAAyB,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CAnEQJ,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}