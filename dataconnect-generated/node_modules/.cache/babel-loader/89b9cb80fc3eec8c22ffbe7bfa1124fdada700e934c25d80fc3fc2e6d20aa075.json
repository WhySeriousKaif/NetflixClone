{"ast":null,"code":"var _jsxFileName = \"/Users/mdkaifmolla/Desktop/netflix/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\"; // Make sure axios is correctly imported\nimport \"./Row.css\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow = false\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(`/discover/tv?api_key=YOUR_API_KEY&with_networks=213`);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n  const handleClick = movie => {\n    setSelectedMovie(movie);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `https://image.tmdb.org/t/p/original/${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie__details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedMovie.title || selectedMovie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedMovie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"close-button\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"aqy0DDhQGBUJt1H9NRQxrRU38So=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","setAppElement","Row","title","fetchUrl","isLargeRow","_s","movies","setMovies","selectedMovie","setSelectedMovie","modalIsOpen","setModalIsOpen","fetchData","request","get","data","results","console","log","handleClick","movie","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","poster_path","backdrop_path","alt","name","id","isOpen","onRequestClose","overlayClassName","overview","_c","$RefreshReg$"],"sources":["/Users/mdkaifmolla/Desktop/netflix/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\"; // Make sure axios is correctly imported\nimport \"./Row.css\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nfunction Row({ title, fetchUrl, isLargeRow = false }) {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(\n        `/discover/tv?api_key=YOUR_API_KEY&with_networks=213`\n      );\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  console.log(movies);\n\n  const handleClick = (movie) => {\n    setSelectedMovie(movie);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`https://image.tmdb.org/t/p/original/${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        className=\"modal\"\n        overlayClassName=\"overlay\"\n      >\n        {selectedMovie && (\n          <div className=\"movie__details\">\n            <h3>{selectedMovie.title || selectedMovie.name}</h3>\n            <p>{selectedMovie.overview}</p>\n            <button onClick={closeModal} className=\"close-button\">\n              Close\n            </button>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n}\n\nexport default Row;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}